syntax = "proto3";

// option go_package = ".;pb";
option go_package = ".;common";

service AgentService {
    rpc PerformFantasyActions(FantasyLandscape) returns (FantasySelections) {}
}

message FantasyLandscape {
    uint32 match_number = 1;
    LeagueSettings settings = 2;
    FantasyTeam bot_team = 3;
    Bet bet = 4;
    repeated Player players = 5;
    /* TODO historical / statistical data */
    /* TODO competition lineups */
}

message Bet {
    string professional_home_team = 1;
    string professional_away_team = 2;
    Player player = 3;

    enum Type {
        OVER = 0;
        UNDER = 1;
    }

    Type type = 4;
    float points = 5;
    float price = 6;
}

message FantasySelections {
    bool make_bet = 1;
    repeated PlayerSlot slots = 2;
}

message FantasyTeam {
    string id = 1;
    string name = 2;
    string owner = 3;
}

message LeagueSettings {
    uint32 num_teams = 1;
    repeated PlayerSlot slots_per_team = 2;
    /* scoring, budgets, etc. */
}

message PlayerSlot {
    string name = 1;
    repeated string allowed_player_positions = 2;
    string assigned_player_id = 3;
}

message Player {
    string id = 1;
    string full_name = 2;
    repeated string allowed_positions = 3;
    string professional_team = 4;
    string status = 5;
    uint32 fantasy_team_id = 6; /* 0 should be unassigned */
}

message Bot {
    string id = 1;
    string source_repo_username = 2;
    string source_repo_name = 3;
    uint32 fantasy_team_id = 4; /* 0 should be unassigned */
}